model Comment {
    id String @id @default(cuid())
    body String
    advantages String[]
    disadvantages String[]
    created_at String
    is_buyer Boolean @default(false)
    rate Int?
    is_approved Boolean @default(false)
    comment_reaction CommentReaction?

    purchased_item PurchasedItem?

    userId String
    user User @relation(fields: [userId],references: [id],onDelete: Cascade)

    productId String
    product Product @relation(fields: [productId],references: [id],onDelete: Cascade)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

}

model PurchasedItem {
    id String @id @default(cuid())

   sellerId String?
   seller Seller? @relation(fields: [sellerId],references: [id],onDelete: Cascade)
   

    colorId Int?
    color Color? @relation(fields: [colorId],references: [id],onDelete: Cascade)

    commentId String? @unique
    comment Comment? @relation(fields: [commentId],references: [id],onDelete: Cascade)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    
}

model CommentReaction {
    id String @id @default(cuid())

    likes Int @default(0)
    dislikes Int @default(0)


    commentId String @unique
    comment Comment @relation(fields: [commentId],references: [id],onDelete: Cascade)

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}